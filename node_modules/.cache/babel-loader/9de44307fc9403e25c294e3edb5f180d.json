{"ast":null,"code":"var _jsxFileName = \"D:\\\\0-SKuz-Programms\\\\6th_semester\\\\EMT\\\\LabExercise\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport logo from \"../../logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Authors from '../Authors/authors';\nimport Books from '../Books/BookList/books';\nimport libraryService from \"../../repository/libraryRepository\";\nimport Header from '../Header/header';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport BookAdd from '../Books/BookAdd/bookAdd';\nimport BookEdit from '../Books/BookEdit/bookEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadAuthors = () => {\n      libraryService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n        console.log(data);\n      });\n    };\n\n    this.addBook = (name, category, availableCopies, authorId, isInGoodCondition) => {\n      libraryService.addBook(name, category, availableCopies, authorId, isInGoodCondition).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.editBook = (name, category, availableCopies, authorId, isInGoodCondition) => {\n      libraryService.editBook(name, category, availableCopies, authorId, isInGoodCondition).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.loadBooks = () => {\n      libraryService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n        console.log(data);\n      });\n    };\n\n    this.loadCountries = () => {\n      libraryService.fetchCountries().then(data => {\n        this.setState({\n          countries: data\n        });\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      authors: [],\n      books: [],\n      countries: [],\n      selectedBook: {}\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <Books books = {this.state.books}/>\n      // </div>\n      _jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/authors\",\n              exact: true,\n              render: () => /*#__PURE__*/_jsxDEV(Authors, {\n                authors: this.state.authors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookAdd, {\n              authors: this.state.authors,\n              categories: this.state.categories,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              authors: this.state.authors,\n              manufacturers: this.state.manufacturers,\n              onEditBook: this.editBook,\n              book: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/books\",\n              exact: true,\n              render: () => /*#__PURE__*/_jsxDEV(Books, {\n                books: this.state.books,\n                onEdit: this.editBook\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n  componentDidMount() {\n    this.loadAuthors();\n    this.loadBooks();\n    this.loadCountries();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/0-SKuz-Programms/6th_semester/EMT/LabExercise/frontend/src/components/App/App.js"],"names":["React","Component","Authors","Books","libraryService","Header","BrowserRouter","Router","Redirect","Route","BookAdd","BookEdit","App","constructor","props","loadAuthors","fetchAuthors","then","data","setState","authors","console","log","addBook","name","category","availableCopies","authorId","isInGoodCondition","loadBooks","editBook","fetchBooks","books","loadCountries","fetchCountries","countries","state","selectedBook","render","categories","manufacturers","componentDidMount"],"mappings":"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","sourcesContent":["import logo from '../../logo.svg';\nimport './App.css';\nimport React, {Component} from 'react'\nimport Authors from '../Authors/authors'\nimport Books from '../Books/BookList/books'\nimport libraryService from \"../../repository/libraryRepository\";\nimport Header from '../Header/header'\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\nimport BookAdd from '../Books/BookAdd/bookAdd';\nimport BookEdit from '../Books/BookEdit/bookEdit';\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authors: [],\n      books: [],\n      countries: [],\n      selectedBook: {}\n    }\n  }\n\n  render() {\n    return (\n        // <div>\n        //   <Books books = {this.state.books}/>\n        // </div>\n        <Router>\n          <Header/>\n          <main>\n            <div className=\"container\">\n              <Route path={\"/authors\"} exact render={() =>\n                  <Authors authors={this.state.authors}/>}/>\n            </div>\n\n\n            <Route path={\"/books/add\"} exact render={() =>\n                <BookAdd authors={this.state.authors} categories={this.state.categories}\n                            onAddBook={this.addBook}/>}/>\n\n            <Route path={\"/books/edit/:id\"} exact render={() =>\n                <BookEdit authors={this.state.authors}\n                             manufacturers={this.state.manufacturers}\n                             onEditBook={this.editBook}\n                             book={this.state.selectedBook}/>}/>\n\n            {/*<Route path={\"/products/edit/:id\"} exact render={() =>*/}\n            {/*    <BookEdit categories={this.state.categories}*/}\n            {/*                 manufacturers={this.state.manufacturers}*/}\n            {/*                 onEditBook={this.editBook}*/}\n            {/*                 product={this.state.selectedBook}/>}/>*/}\n\n            <div className=\"container\">\n              <Route path={\"/books\"} exact render={() =>\n                  <Books books={this.state.books}\n                  onEdit = {this.editBook}/>}/>\n            </div>\n          </main>\n        </Router>\n    )\n  }\n\n  loadAuthors = () => {\n    libraryService.fetchAuthors().then((data) => {\n      this.setState({\n        authors: data.data\n      });\n      console.log(data)\n    });\n  }\n\n  addBook = (name, category, availableCopies, authorId, isInGoodCondition) => {\n    libraryService.addBook(name, category, availableCopies, authorId, isInGoodCondition)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n\n  editBook = (name, category, availableCopies, authorId, isInGoodCondition) => {\n    libraryService.editBook(name, category, availableCopies, authorId, isInGoodCondition)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n\n  loadBooks = () => {\n    libraryService.fetchBooks().then((data) => {\n      this.setState({\n        books: data.data\n      });\n      console.log(data)\n    })\n  }\n\n  loadCountries = () => {\n    libraryService.fetchCountries().then((data) => {\n      this.setState({\n        countries: data\n      });\n      console.log(data)\n    })\n  }\n\n  componentDidMount() {\n    this.loadAuthors();\n    this.loadBooks();\n    this.loadCountries();\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}